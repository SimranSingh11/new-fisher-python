"""
Django settings for app_fisher project.

Generated by 'django-admin startproject' using Django 2.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os
import json

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'aj60@+_bhiva%00@q*wii86=wyxxml_=ns*h9#ae&t-cn*(acn'

with open(BASE_DIR + '/app_fisher/config.json', 'r') as f:
    config = json.load(f)


# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config.get("DEBUG", True)

ALLOWED_HOSTS = ["*"]



# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders'
] + config["MY_APPS"]+ config["INSTALLED_APPS"]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
] + config["MY_MIDDLEWARES"]


CORS_ORIGIN_ALLOW_ALL = True


ROOT_URLCONF = 'app_fisher.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'app_fisher.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': config["DATABASES"]["ENGINE"],
        'NAME': config["DATABASES"]["NAME"],
        'HOST': config["DATABASES"]["HOST"],
        'PORT': config["DATABASES"]["PORT"],
        'USER': config["DATABASES"]["USER"],
        'PASSWORD': config["DATABASES"]["PASSWORD"],
        # 'POOL_OPTIONS' : {
        #     'POOL_SIZE':5,
        #     'MAX_OVERFLOW': 5
        # }
    },
}


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    # {
    #     'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    # },
    # {
    #     'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    # },
    # {
    #     'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    # },
    # {
    #     'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    # },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = config.get("TIME_ZONE", 'UTC')

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'
# STATICFILES_DIRS = [os.path.join(BASE_DIR, "static")]
STATIC_ROOT = os.path.join(BASE_DIR, 'static/')


MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media/')

AUTH_USER_MODEL = 'user.User'

ADMINS = [('shahnavaz', 'shahnavazv16@gmail.com')]

APP_NAME = config.get("APP_NAME", 'Fisher')

BACKEND_HOST = config.get("BACKEND_HOST", 'http://localhost:8000')
FRONTRND_BASE_URL = config.get("FRONTRND_BASE_URL", 'http://localhost:4200')


# =============== for Email Setting (start) ========================  #

DEFAULT_FROM_EMAIL = 'no-reply@fisharapp.com'
EMAIL_BACKEND = config["EMAIL"]["BACKEND"]
EMAIL_USE_TLS = config["EMAIL"]["USE_TLS"]
EMAIL_HOST = config["EMAIL"]["HOST"]
EMAIL_PORT = config["EMAIL"]["PORT"]
EMAIL_HOST_USER = config["EMAIL"]["HOST_USER"]
EMAIL_HOST_PASSWORD = config["EMAIL"]["HOST_PASSWORD"]
EMAIL_BASE_TEMPLATE = "email_templates/base/dynamic_base.html"

# =============== for Email Setting (start) ======================== #


# =============== for REST_FRAMEWORK (start) ======================== #

REST_FRAMEWORK = {
    # Use Django's standard `django.contrib.auth` permissions,
    # or allow read-only access for unauthenticated user.
    'DEFAULT_PERMISSION_CLASSES': [
        # 'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly'
        'rest_framework.permissions.AllowAny',
    ],

    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.TokenAuthentication',
    ),

    'DEFAULT_RENDERER_CLASSES': (
        'rest_framework.renderers.JSONRenderer',
        'rest_framework.renderers.BrowsableAPIRenderer',

    ),
    'DEFAULT_SCHEMA_CLASS': 'rest_framework.schemas.coreapi.AutoSchema',
    
    # 'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.LimitOffsetPagination',
    # 'PAGE_SIZE': 100
}

# =============== for REST_FRAMEWORK (end) ======================== #
